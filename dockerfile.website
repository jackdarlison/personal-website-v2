# Build the rust project, it uses a Debain OS
FROM rust:1.89.0 AS builder

# Cache dependencies work around, copying over all files triggers a complete rebuuild as cargo.toml is new.
# Copying individually allows us only rebuild dependencies if they have changed
COPY Cargo.toml .
COPY Cargo.lock .

# Create a dummy file
RUN mkdir -p ./src/bin && echo 'fn main() { println!("hello"); }' > ./src/main.rs && echo 'fn main() {}' > ./src/bin/blog_util.rs
RUN cargo build --release
RUN rm -rf ./src

COPY src/ src/
COPY templates/ templates/

# Force update modification times to make cargo rebuild them
RUN touch -a -m ./src/main.rs
RUN touch -a -m ./src/bin/blog_util.rs

RUN cargo build --release

# Build the css
FROM node:latest AS css

# Node images require a workdir
WORKDIR /app

RUN npm install tailwindcss @tailwindcss/cli @tailwindcss/typography daisyui

COPY templates/ templates/
COPY app.css .

RUN npx @tailwindcss/cli -i app.css -o main.css

# Deploy the application
FROM ubuntu:24.04

COPY static/ static/
COPY --from=css app/main.css static/main.css
COPY --from=builder target/release/website .
COPY --from=builder target/release/blog_util .
COPY /posts posts/

ENTRYPOINT [ "./website" ]